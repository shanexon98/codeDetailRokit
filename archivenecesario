// ignore_for_file: library_private_types_in_public_api

import 'package:auto_size_text/auto_size_text.dart';
import 'package:flutter/material.dart';
import 'package:flutter_i18n/flutter_i18n.dart';
import 'package:go_router/go_router.dart';
import 'package:quan/application/UI/v2/general_button.dart';
import 'package:quan/application/UI/widgets/snackbar.dart';
import 'package:quan/application/ui/theme/app_theme.dart';
import 'package:quan/core/helpers/theme_helper.dart';

class DetailRoatKitPage extends StatelessWidget {
  static const path = '/detailRoatKit-Page';

  const DetailRoatKitPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: AutoSizeText(
          "Editar",
          style: Theme.of(context).textTheme.titleMedium,
        ),
      ),
      body: Padding(
        padding: EdgeInsets.all(15.0),
        child: SingleChildScrollView(
          child: Column(
            children: [
              const SelectOptions(
                textStart: "Botiquín primeros auxilios",
              ),
              const SizedBox(
                height: 20,
              ),
              Container(
                width: double.infinity,
                height: MediaQuery.of(context).size.height * 0.38,
                decoration: BoxDecoration(
                    color: const Color(0xffF2F4F7),
                    // color: Colors.red,
                    borderRadius: BorderRadius.circular(15)),
                child: const Padding(
                  padding: EdgeInsets.all(20.0),
                  child: Column(
                    children: [
                      ItemCardEdit(
                        textStart: 'Algodón',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Antiséptico',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Bisturi / tijeras',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Gasa estéril',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Esparadrapo / vendas adhesivas',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Jabón',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Venda elástica',
                      ),
                    ],
                  ),
                ),
              ),
              const Padding(
                padding: EdgeInsets.symmetric(vertical: 15.0),
                child: SelectOptions(
                  textStart: "Caja de herramientas",
                ),
              ),
              Container(
                width: double.infinity,
                height: MediaQuery.of(context).size.height * 0.45,
                decoration: BoxDecoration(
                    color: const Color(0xffF2F4F7),
                    
                    borderRadius: BorderRadius.circular(15)),
                child: const Padding(
                  padding: EdgeInsets.all(20.0),
                  child: Column(
                    children: [
                      ItemCardEdit(
                        textStart: 'Alicate',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Cruseta',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Destornillador estrella',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Destornillador pala',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Gato hidráulico',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Linterna',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'LLave de expansión',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'LLaves fijas',
                      ),
                    ],
                  ),
                ),
              ),
              const SizedBox(
                height: 5,
              ),
               Center(
                child: SizedBox(
                  width: double.infinity,
                  child: GeneralButton(
                    text: "Adicionales",
                    onPressed: () {
                      showModalBottomSheet(
                        isScrollControlled:
                            true, 
                        isDismissible: true,
                        context: context,

                        backgroundColor: Colors.white,
                        builder: (BuildContext context) {
                          return const ShowBarAdditionals();
                        },
                      );
                      
                    },
                  ),
                ),
              ),
              const SizedBox(
                height: 20,
              ),
              Center(
                child: SizedBox(
                  width: double.infinity,
                  child: GeneralButton(
                    text: "Guardar cambios",
                    onPressed: () {
                      
                       context.pop();
                      AppSnackbar.showSuccess(
                        context,
                        FlutterI18n.translate(
                          context,
                          "Se guardo con éxito la información",
                        ),
                      );
                    },
                  ),
                ),
              ),
              const SizedBox(
                height: 20,
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class SelectOptions extends StatelessWidget {
  const SelectOptions({
    super.key,
    required this.textStart,
  });
  final String textStart;

  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        AutoSizeText(
          textStart,
          style: const TextStyle(fontSize: 18, fontWeight: FontWeight.w600),
        ),
        const Spacer(),
        const AutoSizeText(
          "SI",
          style: TextStyle(fontSize: 18, fontWeight: FontWeight.w600),
        ),
        const SizedBox(
          width: 35,
        ),
        const AutoSizeText(
          "NO",
          style: TextStyle(fontSize: 18, fontWeight: FontWeight.w600),
        ),
        const SizedBox(
          width: 20,
        ),
      ],
    );
  }
}

class ShowBarAdditionals extends StatelessWidget {
  const ShowBarAdditionals({
    super.key,
  });

  @override
  Widget build(BuildContext context) {
    return SizedBox(
        height: MediaQuery.of(context).size.height * 1,
        child: Padding(
          padding: const EdgeInsets.all(25.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  const Icon(
                    Icons.arrow_back_ios,
                    color: Color(0xff5F25DF),
                  ),
                  AutoSizeText(
                    FlutterI18n.translate(context, "Editar"),
                    textAlign: TextAlign.start,
                    style: const TextStyle(
                      fontSize: 18,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  IconButton(
                      onPressed: () {
                        context.pop();
                      },
                      icon: const Icon(Icons.close))
                ],
              ),
              const SizedBox(height: 20),
              const Padding(
                padding: EdgeInsets.symmetric(vertical: 15.0),
                child: SelectOptions(
                  textStart: "Adicionales",
                ),
              ),
              const SizedBox(
                height: 20,
              ),
              Container(
                width: double.infinity,
                height: MediaQuery.of(context).size.height * 0.23,
                decoration: BoxDecoration(
                    color: const Color(0xffF2F4F7),
                    borderRadius: BorderRadius.circular(15)),
                child: const Padding(
                  padding: EdgeInsets.all(20.0),
                  child: Column(
                    children: [
                      ItemCardEdit(
                        textStart: 'LLanta de repuesto inflada',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Chaleco reflectivo',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Señales triangulo(2)',
                      ),
                      Divider(),
                      ItemCardEdit(
                        textStart: 'Tacos para bloquear vehículo(2)',
                      ),
                    ],
                  ),
                ),
              ),
              const Padding(
                padding: EdgeInsets.symmetric(vertical: 15.0),
                child: SelectOptions(
                  textStart: "Extintor",
                ),
              ),
              const SizedBox(
                height: 20,
              ),
              Container(
                width: double.infinity,
                height: MediaQuery.of(context).size.height * 0.08,
                decoration: BoxDecoration(
                    color: const Color(0xffF2F4F7),
                    // color: Colors.red,
                    borderRadius: BorderRadius.circular(15)),
                child: const Padding(
                  padding: EdgeInsets.all(20.0),
                  child: Column(
                    children: [
                      ItemCardEdit(
                        textStart: '¿Está vigente?',
                      ),
                    ],
                  ),
                ),
              ),
              const _DefaultTextField(
                readOnly: true,
                textInput: 'dd/mm/aaaa',
                suffixIcon: Icon(Icons.calendar_month),
                textTitle: 'Fecha de vencimiento',
              ),
             const SizedBox(height: 80,),
              Center(
                child: SizedBox(
                  width: double.infinity,
                  child: GeneralButton(
                    text: "Guardar cambios",
                    onPressed: () {
                     
                       context.pop();
                      AppSnackbar.showSuccess(
                        context,
                        FlutterI18n.translate(
                          context,
                          "Se guardo con éxito la información",
                        ),
                      );
                    },
                  ),
                ),
              ),
            ],
          ),
        ));
  }
}

class _DefaultTextField extends StatelessWidget {
  const _DefaultTextField({
    this.focusNode,
    super.key,
    required this.textInput,
    required this.suffixIcon,
    required this.textTitle,
    required this.readOnly,
  });
  final FocusNode? focusNode;
  // final FormModel formModel;
  final String textInput;
  final Widget suffixIcon;
  final String textTitle;
  final bool readOnly;
  @override
  Widget build(BuildContext context) {
    //CAMBIAR POR RAECTIVE FORMS CUANDO TENGA FORMCONTROL DEL FORMULARIO
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 12.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          AutoSizeText(
            textTitle,
            style: Theme.of(context).textTheme.titleMedium,
          ),
          const SizedBox(
            height: 10,
          ),
          TextField(
            readOnly: readOnly,
            autofocus: false,
            style: getTextStyle(context, QuanTexts.body16),
            focusNode: focusNode,

            // onChanged: (control) {
            //   control.markAsTouched();

            // },
            //  formControl: formModel.,
            keyboardType: TextInputType.text,
            decoration: InputDecoration(
              isDense: true,
              suffixIcon: suffixIcon,
              fillColor: Colors.white,
              contentPadding: const EdgeInsets.only(
                  bottom: 16, left: 16, right: 16, top: 18),
              enabledBorder: OutlineInputBorder(
                borderRadius: BorderRadius.circular(15),
                borderSide:
                    const BorderSide(width: 1, color: Color(0xff475467)),
              ),
              errorBorder: OutlineInputBorder(
                borderRadius: BorderRadius.circular(8),
                borderSide: const BorderSide(
                  width: 1,
                  color: Colors.red,
                ), //<-- SEE HERE
              ),
              border: OutlineInputBorder(
                borderRadius: BorderRadius.circular(8),
                borderSide: const BorderSide(
                  width: 0,
                  color: Colors.transparent,
                ),
              ),
              hintText: FlutterI18n.translate(
                context,
                textInput,
              ),
            ),
            // validationMessages: {
            //   ValidationMessage.required: (error) => FlutterI18n.translate(
            //         context,
            //         "loginOtp.HintErrorPhoneRequired",
            //       ),
            //   ValidationMessage.number: (error) => FlutterI18n.translate(
            //         context,
            //         "loginOtp.HintErrorPhone",
            //       ),
            // },
          ),
        ],
      ),
    );
  }
}

class ItemCardEdit extends StatefulWidget {
  const ItemCardEdit({
    Key? key,
    required this.textStart,
  }) : super(key: key);

  final String textStart;

  @override
  _ItemCardEditState createState() => _ItemCardEditState();
}

class _ItemCardEditState extends State<ItemCardEdit> {
  bool checkBox1 = false;
  bool checkBox2 = false;

  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        AutoSizeText(
          widget.textStart,
          style: const TextStyle(
            fontSize: 18,
            fontWeight: FontWeight.w500,
          ),
        ),
        const Spacer(),
        CustomCheckBox(
          value: checkBox1,
          onChanged: (value) {
            setState(() {
              checkBox1 = value!;
              checkBox2 = !value; 
            });
          },
        ),
        const SizedBox(
          width: 20,
        ),
        CustomCheckBox(
          value: checkBox2,
          onChanged: (value) {
            setState(() {
              checkBox2 = value!;
              checkBox1 = !value; 
            });
          },
        ),
      ],
    );
  }
}

class CustomCheckBox extends StatelessWidget {
  final bool value;
  final ValueChanged<bool?> onChanged;

  const CustomCheckBox({
    required this.value,
    required this.onChanged,
  });

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () {
        onChanged(!value);
      },
      child: Container(
        width: 30,
        height: 30,
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(10.0),
          border: Border.all(
            color: const Color(0xff5F25DF),
            width: 1,
          ),
          color: value ? const Color(0XFFFF7400) : Colors.white,
        ),
        child: value
            ? const Icon(
                Icons.check,
                color: Colors.white,
                size: 20,
              )
            : null,
      ),
    );
  }
}
